# EDA Packages
import  pandas  as  pd
import  numpy   as  np

# Machine Learning Packages
from    sklearn.feature_extraction.text     import  TfidfVectorizer
from    sklearn.linear_model                import  LogisticRegression
from    sklearn.model_selection             import  train_test_split
from    joblib                              import  dump,   load

def urlClasificador(urlLista):
    
    labelBad    =   []
    urlBad      =   []

    """ CARGAMOS LA DATA    """
    # urls_data   =   pd.read_csv("extensionBackend/pythonScripts/data.csv")#PRUEBAS
    urls_data   =   pd.read_csv("extensionBackend/pythonScripts/data.csv")#PRUEBAS CON VIEWS
    urls_data   =   urls_data.dropna()

    # ETIQUETAS DEL CSV.
    y   =   urls_data["label"]

    # URL DEL CSV.
    url_list    =   urls_data["url"] #CHECAR PORQUE MARCA LAS LABEL TAMBIÉN.

    #SE USA LA FUNCIÓN "TfidVectorizer" PARA CONVERTIR CADA TOKEN EN UNA MATRIZ TIPO TF-IDF.
    vectorizer  =   TfidfVectorizer()

    # ALMACENA LOS VECTORES EN UNA VARIABLE X COMO NUESTRAS XCARATERISTICAS (XFEATURES).
    X   =   vectorizer.fit_transform(url_list)

    # DIVIDE EL CONJUNTO DE DATOS "X" y "y", EN DATOS DE ENTRENAMIENTO Y EN DATOS DE PRUEBA, CON UNA PROPORCIÓN DE 80/20.
    X_train,    X_test, y_train,    y_test  =   train_test_split(X, y,  test_size=0.2,  random_state=42)

    # CONSTRUCCIÓN DEL MODELO USANDO REGRESIÓN LOGÍSTICA.
    logit   =   LogisticRegression()

    # ENTRENA EL MODELO ACORDE LA INFORMACIÓN INGRESADA
    logit.fit(X_train,  y_train)

    # PRECISIÓN DEL MODELO.
    # print("PRECISIÓN: ",logit.score(X_test, y_test))

# ----------------------------------------------------------------------------------------------

    # clf             =   load("extensionTesis/extensionBackend/pythonScripts/modeloIa.joblib")#PRUEBAS
    clf             =   load("extensionBackend/pythonScripts/modeloIa.joblib")#PRUEBAS CON VIEWS
    urlLista_2        =   vectorizer.transform(urlLista)
    urlPredicción   =   clf.predict(urlLista_2)

    labelBad    =   [label  for label   in  range(len(urlPredicción))   if  urlPredicción[label]   ==  "bad"]
    for i   in  range(len(labelBad)):
        urlBad.append(urlLista[i])

    # print(urlBad)
    # print(len(urlBad))
    # print(len(labelBad))

    return  urlBad

# urlClasificador(['https://stackoverflow.com/#', 'https://stackoverflow.com/', 'https://stackoverflow.com/questions', 'https://stackoverflow.com/tags', 'https://stackoverflow.com/users', 'https://stackoverflow.com/jobs/companies?so_medium=stackoverflow&so_source=SiteNav', 'javascript:void(0)', 'https://stackoverflow.com/collectives', 'https://try.stackoverflow.co/why-teams/?utm_source…side-bar&utm_campaign=campaign-38&utm_content=cta', 'https://stackoverflow.co/teams', 'javascript:void(0)', 'https://stackoverflowteams.com/teams/create/free?u…side-bar&utm_campaign=campaign-38&utm_content=cta', 'https://stackoverflow.com/collectives', 'https://stackoverflow.co/teams', 'https://stackoverflow.com/', 'https://stackoverflow.co/', 'https://stackoverflow.com/#', 'https://stackoverflow.com/teams', 'https://stackoverflow.com/questions', 'https://stackoverflow.com/teams', 'https://stackoverflow.co/talent', 'https://stackoverflow.co/advertising', 'https://stackoverflow.co/', 'https://stackoverflow.com/', 'https://stackoverflow.com/', 'https://stackoverflow.com/help', 'https://chat.stackoverflow.com/?tab=site&host=stackoverflow.com', 'https://meta.stackoverflow.com/', 'https://stackoverflow.com/users/signup?ssrc=site_s…cher&returnurl=https%3a%2f%2fstackoverflow.com%2f', 'https://stackoverflow.com/users/login?ssrc=site_sw…cher&returnurl=https%3a%2f%2fstackoverflow.com%2f', 'https://stackexchange.com/sites', 'https://stackoverflow.blog/', 'https://stackoverflow.com/users/login?ssrc=head&returnurl=https%3a%2f%2fstackoverflow.com%2f', 'https://stackoverflow.com/users/signup?ssrc=head&returnurl=https%3a%2f%2fstackoverflow.com%2f', 'https://stackoverflow.com/users/signup?ssrc=product_home', 'https://stackoverflow.com/questions', 'https://stackoverflow.co/teams', 'https://stackoverflow.com/questions', 'https://stackoverflow.com/users/signup?ssrc=product_home', 'https://stackoverflow.com/questions', 'https://stackoverflow.co/teams', 'https://stackoverflow.co/explore-teams', 'https://stackoverflow.co/teams', 'https://stackoverflow.co/teams/features', 'https://stackoverflowteams.com/teams/create/free', 'https://stackoverflowteams.com/teams/create/basic', 'https://stackoverflowteams.com/teams/create/business', 'https://stackoverflow.co/explore-teams', 'https://stackoverflow.co/teams/roi', 'https://stackoverflow.co/teams/integrations/microsoft-teams', 'https://stackoverflow.co/teams/integrations/slack', 'https://stackoverflow.co/teams/integrations/microsoft-teams', 'https://stackoverflow.com/teams/integrations/slack', 'https://stackoverflow.com/teams/integrations/microsoft-teams', 'https://stackoverflow.com/teams/integrations/github', 'https://stackoverflow.com/teams/integrations/jira', 'https://stackoverflow.com/teams/integrations/okta', 'https://stackoverflow.co/teams/integrations/slack', 'https://stackoverflow.co/advertising', 'https://stackoverflow.co/collectives', 'https://stackoverflow.co/talent', 'https://stackoverflow.co/', 'https://stackoverflow.co/company/work-here', 'https://apple.stackexchange.com/', 'https://unix.stackexchange.com/', 'https://ai.stackexchange.com/', 'https://softwareengineering.stackexchange.com/', 'https://askubuntu.com/', 'https://salesforce.stackexchange.com/', 'https://serverfault.com/', 'https://superuser.com/', 'https://stackexchange.com/sites', 'https://serverfault.com/', 'https://superuser.com/', 'https://dba.stackexchange.com/', 'https://quantumcomputing.stackexchange.com/', 'https://gamedev.stackexchange.com/', 'https://networkengineering.stackexchange.com/', 'https://stackoverflowteams.com/teams/create/free', 'https://stackoverflow.com/', 'https://stackoverflow.com/', 'https://stackoverflow.com/questions', 'https://stackoverflow.com/help', 'https://stackoverflow.co/', 'https://stackoverflow.co/teams', 'https://stackoverflow.co/advertising', 'https://stackoverflow.co/collectives', 'https://stackoverflow.co/talent', 'https://stackoverflow.co/', 'https://stackoverflow.co/', 'https://stackoverflow.co/company/press', 'https://stackoverflow.co/company/work-here', 'https://stackoverflow.com/legal', 'https://stackoverflow.com/legal/privacy-policy', 'https://stackoverflow.com/legal/terms-of-service', 'https://stackoverflow.co/company/contact', 'https://stackoverflow.com/#', 'https://stackoverflow.com/legal/cookie-policy', 'https://stackexchange.com/', 'https://stackexchange.com/sites#technology'])